/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package jrpg_ca2;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
/**
 * DIT/FT/2A/01
 * p2424093
 * @author Lim Song Chern Jayden
 */
public class displayStudentBook extends javax.swing.JFrame {

    private final StudentManagement studentManagement = new StudentManagement();
    private final BookManagement bookManagement = new BookManagement();

    private static SoundPlayer errorAudio = new SoundPlayer("jrpg_ca2/error.wav");
    
    public int index;
    public int bookIndex;
    public int studentIndex;
    
    private ArrayList<Student> allStudents;
    private ArrayList<Book> allBooks;
    
    private Student currentStudent;
    private Book currentBook;
    
    private Student searchedStudent;
    private Book searchedBook;

    /**
     * Creates new form displayStudentBook
     */
    
    public displayStudentBook() {
        initComponents();
        loadStudents();
        loadBooks();
        index = 0;
        bookIndex = 0;
        studentIndex = 0;
        displayCurrentBook();
        displayCurrentStudent();
        
        // Disable display buttons initially
        displayStudentBtn.setEnabled(false);
        displayBookBtn.setEnabled(false);
    }
        
    
    public void loadStudents() {
        studentManagement.loadAllData();
        allStudents = studentManagement.getStudentStore();
        System.out.println(allStudents);
    }
    
    public void loadBooks() {
        bookManagement.loadAllData();
        allBooks = bookManagement.getBookStore();
        System.out.println(allBooks);
    }
    
    public void displayCurrentStudent() {
        currentStudent = allStudents.get(index);
        System.out.println(currentStudent);
        nameField.setText(currentStudent.getName());
        studentIDField.setText(currentStudent.getAdminNumber());

        studentNumber.setBorder(BorderFactory.createTitledBorder(
                "Student " + (index + 1) + " of " + allStudents.size()));
    }

        
    public void displayCurrentBook() {
        try {
            currentBook = allBooks.get(bookIndex);
            titleField.setText(currentBook.getBookTitle());
            authorField.setText(currentBook.getAuthor());
            ISBNField.setText(currentBook.getISBN());
            priceField.setText(String.format("%.2f", currentBook.getPrice()));
            categoryField.setText(currentBook.getCategory());
            avaliabilityField.setText(currentBook.getAvailableForLoan() ? "Yes" : "No");

            bookNumber.setBorder(BorderFactory.createTitledBorder(
                    "Book " + (bookIndex + 1) + " of " + allBooks.size()));
        } catch (IndexOutOfBoundsException e) {
//            Book currentBook = null;
            titleField.setText(null);
            authorField.setText(null);
            ISBNField.setText(null);
            priceField.setText(null);
            categoryField.setText(null);
            avaliabilityField.setText(null);
            bookNumber.setBorder(BorderFactory.createTitledBorder("No Books Found"));
        }
    }
   
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        studentNumber = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        studentIDLabel = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        studentIDField = new javax.swing.JTextField();
        previousBtnStudent = new javax.swing.JButton();
        nextBtnStudent = new javax.swing.JButton();
        firstBtnStudent = new javax.swing.JButton();
        lastBtnStudent = new javax.swing.JButton();
        createBtnStudent = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        studentRB = new javax.swing.JRadioButton();
        bookRB = new javax.swing.JRadioButton();
        searchBarField = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        bookNumber = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        authorLabel = new javax.swing.JLabel();
        ISBNLabel = new javax.swing.JLabel();
        priceLabel = new javax.swing.JLabel();
        categoryLabel = new javax.swing.JLabel();
        avaliableLabel = new javax.swing.JLabel();
        titleField = new javax.swing.JTextField();
        authorField = new javax.swing.JTextField();
        ISBNField = new javax.swing.JTextField();
        priceField = new javax.swing.JTextField();
        categoryField = new javax.swing.JTextField();
        avaliabilityField = new javax.swing.JTextField();
        addBookBtn = new javax.swing.JButton();
        deleteBookBtn = new javax.swing.JButton();
        previousBtnBook = new javax.swing.JButton();
        nextBtnBook = new javax.swing.JButton();
        firstBtnBook = new javax.swing.JButton();
        lastBtnBook = new javax.swing.JButton();
        searchResultLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchResultArea = new javax.swing.JTextArea();
        displayStudentBtn = new javax.swing.JButton();
        displayBookBtn = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(java.awt.Color.blue);
        jLabel1.setText("Student and Book Management");

        studentNumber.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Student x of x", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        nameLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        nameLabel.setText("Name: ");

        studentIDLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        studentIDLabel.setText("Student ID: ");

        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });

        studentIDField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentIDFieldActionPerformed(evt);
            }
        });

        previousBtnStudent.setText("Previous");
        previousBtnStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousBtnStudentActionPerformed(evt);
            }
        });

        nextBtnStudent.setText("Next");
        nextBtnStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextBtnStudentActionPerformed(evt);
            }
        });

        firstBtnStudent.setText("First");
        firstBtnStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstBtnStudentActionPerformed(evt);
            }
        });

        lastBtnStudent.setText("Last");
        lastBtnStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastBtnStudentActionPerformed(evt);
            }
        });

        createBtnStudent.setText("Create");
        createBtnStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBtnStudentActionPerformed(evt);
            }
        });

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout studentNumberLayout = new javax.swing.GroupLayout(studentNumber);
        studentNumber.setLayout(studentNumberLayout);
        studentNumberLayout.setHorizontalGroup(
            studentNumberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentNumberLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(studentNumberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentNumberLayout.createSequentialGroup()
                        .addGroup(studentNumberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(studentIDLabel)
                            .addComponent(nameLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(studentNumberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(studentIDField)
                            .addComponent(nameField))
                        .addGap(18, 18, 18)
                        .addGroup(studentNumberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(createBtnStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(studentNumberLayout.createSequentialGroup()
                        .addComponent(previousBtnStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nextBtnStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(firstBtnStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lastBtnStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 58, Short.MAX_VALUE)))
                .addGap(33, 33, 33))
        );
        studentNumberLayout.setVerticalGroup(
            studentNumberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentNumberLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(studentNumberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createBtnStudent))
                .addGap(22, 22, 22)
                .addGroup(studentNumberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(studentIDLabel)
                    .addComponent(deleteBtn))
                .addGap(26, 26, 26)
                .addGroup(studentNumberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(previousBtnStudent)
                    .addComponent(nextBtnStudent)
                    .addComponent(firstBtnStudent)
                    .addComponent(lastBtnStudent))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Search: ");

        buttonGroup1.add(studentRB);
        studentRB.setText("by student");
        studentRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentRBActionPerformed(evt);
            }
        });

        buttonGroup1.add(bookRB);
        bookRB.setText("by Book");

        searchBarField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBarFieldActionPerformed(evt);
            }
        });

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchBarField, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(studentRB, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bookRB, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentRB)
                    .addComponent(bookRB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchBarField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(204, 255, 255));

        bookNumber.setBackground(new java.awt.Color(204, 255, 255));
        bookNumber.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Book x of x", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N

        titleLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        titleLabel.setText("Title: ");

        authorLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        authorLabel.setText("Author:");

        ISBNLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ISBNLabel.setText("ISBN:");

        priceLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        priceLabel.setText("Price:");

        categoryLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        categoryLabel.setText("Category:");

        avaliableLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        avaliableLabel.setText("Avaliable: ");

        titleField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleFieldActionPerformed(evt);
            }
        });

        priceField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceFieldActionPerformed(evt);
            }
        });

        addBookBtn.setText("Add New Book");
        addBookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBookBtnActionPerformed(evt);
            }
        });

        deleteBookBtn.setText("Delete Book");
        deleteBookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBookBtnActionPerformed(evt);
            }
        });

        previousBtnBook.setText("Previous");
        previousBtnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousBtnBookActionPerformed(evt);
            }
        });

        nextBtnBook.setText("Next");
        nextBtnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextBtnBookActionPerformed(evt);
            }
        });

        firstBtnBook.setText("First");
        firstBtnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstBtnBookActionPerformed(evt);
            }
        });

        lastBtnBook.setText("Last");
        lastBtnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastBtnBookActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bookNumberLayout = new javax.swing.GroupLayout(bookNumber);
        bookNumber.setLayout(bookNumberLayout);
        bookNumberLayout.setHorizontalGroup(
            bookNumberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookNumberLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(bookNumberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bookNumberLayout.createSequentialGroup()
                        .addGroup(bookNumberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bookNumberLayout.createSequentialGroup()
                                .addComponent(avaliableLabel)
                                .addGap(34, 34, 34)
                                .addComponent(avaliabilityField))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bookNumberLayout.createSequentialGroup()
                                .addComponent(categoryLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(categoryField, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bookNumberLayout.createSequentialGroup()
                                .addComponent(priceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bookNumberLayout.createSequentialGroup()
                                .addComponent(ISBNLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ISBNField, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bookNumberLayout.createSequentialGroup()
                                .addComponent(authorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(authorField, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(bookNumberLayout.createSequentialGroup()
                                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(titleField, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(47, 47, 47)
                        .addGroup(bookNumberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addBookBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteBookBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(48, 48, 48))
                    .addGroup(bookNumberLayout.createSequentialGroup()
                        .addComponent(previousBtnBook, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(nextBtnBook, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(firstBtnBook, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lastBtnBook, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        bookNumberLayout.setVerticalGroup(
            bookNumberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookNumberLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(bookNumberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(bookNumberLayout.createSequentialGroup()
                        .addGroup(bookNumberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(titleLabel)
                            .addComponent(titleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(bookNumberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(authorLabel)
                            .addComponent(authorField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(bookNumberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ISBNLabel)
                            .addComponent(ISBNField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(bookNumberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(priceLabel)
                            .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(bookNumberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(categoryLabel)
                            .addComponent(categoryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(bookNumberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(avaliableLabel)
                            .addComponent(avaliabilityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(bookNumberLayout.createSequentialGroup()
                        .addComponent(addBookBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteBookBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(126, 126, 126)))
                .addGap(36, 36, 36)
                .addGroup(bookNumberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(previousBtnBook)
                    .addComponent(nextBtnBook)
                    .addComponent(firstBtnBook)
                    .addComponent(lastBtnBook))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bookNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 470, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bookNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        searchResultLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        searchResultLabel.setText("Search Result: ");

        searchResultArea.setColumns(20);
        searchResultArea.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        searchResultArea.setRows(5);
        jScrollPane1.setViewportView(searchResultArea);

        displayStudentBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        displayStudentBtn.setText("Display Student Information");
        displayStudentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayStudentBtnActionPerformed(evt);
            }
        });

        displayBookBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        displayBookBtn.setText("Display Book Information");
        displayBookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayBookBtnActionPerformed(evt);
            }
        });

        exitBtn.setBackground(new java.awt.Color(255, 204, 204));
        exitBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        exitBtn.setText("Exit");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(searchResultLabel)
                                    .addComponent(displayStudentBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(displayBookBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addGap(150, 150, 150)
                                .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(studentNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(exitBtn))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(studentNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(searchResultLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(displayStudentBtn)
                        .addGap(18, 18, 18)
                        .addComponent(displayBookBtn)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void studentIDFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentIDFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentIDFieldActionPerformed

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void previousBtnStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousBtnStudentActionPerformed
        // TODO add your handling code here:
        if (index != 0) {
            index--;

        }
        displayCurrentStudent();
    }//GEN-LAST:event_previousBtnStudentActionPerformed

    private void createBtnStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBtnStudentActionPerformed

    String dialogTitle = "Create New Student";

    String studAdminNumber = studentIDField.getText().trim();
    String studName = nameField.getText().trim();

    // Check if empty
    if (studAdminNumber.isEmpty() || studName.isEmpty()) {
        errorAudio.playSound();
        JOptionPane.showMessageDialog(
                this,
                "Please fill in both Admin Number and Name.",
                "Input Error",
                JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Validation: Admin must start with 'p'
    if (!studAdminNumber.startsWith("p")) {
        errorAudio.playSound();
        JOptionPane.showMessageDialog(
                this,
                "Admin Number must begin with 'p'.",
                "Input Error", 
                JOptionPane.ERROR_MESSAGE
        );
        return;
    }

    // Validation: Length = 8
    if (studAdminNumber.length() != 8) {
        errorAudio.playSound();
        JOptionPane.showMessageDialog(
                this,
                "Admin Number must be exactly 8 characters (e.g., p2501234).",
                "Input Error", 
                JOptionPane.ERROR_MESSAGE
        );
        return;
    }

    // Validation: numeric part between 1300000 and 2600000
    try {
        int adminNo = Integer.parseInt(studAdminNumber.substring(1));
        if (adminNo < 1300000 || adminNo > 2600000) {
            errorAudio.playSound();
            JOptionPane.showMessageDialog(
                    this,
                    "Admin number must be between p1300000 and p2600000.",
                    "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    } catch (NumberFormatException e) {
        errorAudio.playSound();
        JOptionPane.showMessageDialog(this,
                "Admin number format is invalid. Use e.g., p2501234.",
                "Input Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    boolean duplicateFound = false;
    for (int i = 0; i < allStudents.size(); i++) { 
        if(allStudents.get(i).getAdminNumber().equalsIgnoreCase(studAdminNumber)) {
            duplicateFound = true;
            break;
        }
    }
    
    if (duplicateFound) {
        errorAudio.playSound();
        JOptionPane.showMessageDialog(
                this,
                "This Admin Number is already in use",
                "Input Error",
                JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Validation: name only letters + space
    if (!studName.matches("^[a-zA-Z\\s]+$")) {
        errorAudio.playSound();
        JOptionPane.showMessageDialog(this,
                "Name can only contain letters and spaces.",
                "Input Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Create & add student
    Student newStudent = new Student(studAdminNumber, studName);
    allStudents.add(newStudent);

    JOptionPane.showMessageDialog(this,
            "Student added successfully!",
            dialogTitle, JOptionPane.INFORMATION_MESSAGE);

    // Optional: Clear fields after success
    displayCurrentStudent();
    }//GEN-LAST:event_createBtnStudentActionPerformed

    private void studentRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentRBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentRBActionPerformed

    private void searchBarFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBarFieldActionPerformed
        // TODO add your handling code here:
        
        // If search bar is cleared, disable display buttons and clear results
        String searchText = searchBarField.getText().trim();
        if (searchText.isEmpty()) {
            displayStudentBtn.setEnabled(false);
            displayBookBtn.setEnabled(false);
            searchResultArea.setText("");
            searchedStudent = null;
            searchedBook = null;
        }
    }//GEN-LAST:event_searchBarFieldActionPerformed

    private void titleFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_titleFieldActionPerformed

    private void priceFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceFieldActionPerformed

    private void addBookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBookBtnActionPerformed
        // TODO add your handling code here:
        
        String title = titleField.getText().trim();
        String author = authorField.getText().trim();
        String ISBN = ISBNField.getText().trim();
        String priceText = priceField.getText().trim();
        String category = categoryField.getText().trim();
        String availabilityText = avaliabilityField.getText().trim().toLowerCase();
        final String dialogTitle = "Add Book";

        // Validate Title
        if (!title.matches("^[a-zA-Z0-9'\\s]+$")) {
            errorAudio.playSound();
            JOptionPane.showMessageDialog(
                    this, 
                    "Title can only contain letters, numbers, and spaces.", 
                    "Input Error", 
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Validate Author
        if (!author.matches("^[a-zA-Z\\s]+$")) {
            errorAudio.playSound();
            JOptionPane.showMessageDialog(
                    this, 
                    "Author name can only contain letters and spaces.", 
                    "Input Error", 
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Validate ISBN
        if (!ISBN.matches("^[0-9]+$")) {
            errorAudio.playSound();
            JOptionPane.showMessageDialog(
                    this, 
                    "ISBN can only contain numbers.", 
                    "Input Error", 
                    JOptionPane.ERROR_MESSAGE);
            return;
        }   

        // Check for duplicate ISBN
        for (int i = 0; i < allBooks.size(); i++) {
            if (allBooks.get(i).getISBN().equalsIgnoreCase(ISBN)) {
                errorAudio.playSound();
                JOptionPane.showMessageDialog(
                        this, 
                        "This ISBN is already in use.", 
                        "Input Error", 
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        // Validate Price
        double price;
        try {
            price = Double.parseDouble(priceText);
            if (price < 0) throw new NumberFormatException();
        } catch (NumberFormatException e) {
            errorAudio.playSound();
            JOptionPane.showMessageDialog(this, "Price must be a positive number.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Validate Category
        if (!category.matches("^[a-zA-Z\\s]+$")) {
            errorAudio.playSound();
            JOptionPane.showMessageDialog(this, "Category can only contain letters and spaces.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Validate Availability (must be exactly 'true')
        if (!availabilityText.equals("yes")) {
            errorAudio.playSound();
            JOptionPane.showMessageDialog(this, "Availability must be 'Yes'.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Add Book
        Book newBook = new Book(title, author, ISBN, price, category, true); // availability always true
        allBooks.add(newBook);

        JOptionPane.showMessageDialog(this, "Book added successfully!", dialogTitle, JOptionPane.INFORMATION_MESSAGE);

        displayCurrentBook();
    }//GEN-LAST:event_addBookBtnActionPerformed

    private void firstBtnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstBtnBookActionPerformed
        // TODO add your handling code here:
       bookIndex = 0;

        displayCurrentBook();
    }//GEN-LAST:event_firstBtnBookActionPerformed

    private void nextBtnStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextBtnStudentActionPerformed
        // TODO add your handling code here:
        if (index < allStudents.size() - 1) {
            index++;
        }
        displayCurrentStudent();
    }//GEN-LAST:event_nextBtnStudentActionPerformed

    private void displayBookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayBookBtnActionPerformed
        // TODO add your handling code here:
        if (searchedBook != null) {
            final String availability = searchedBook.getAvailableForLoan() ? "Available" : "Not Available";
            
            String resultText = "Book Details:\n"
                    + "=============\n\n"
                    + "Title: " + searchedBook.getBookTitle() + "\n"
                    + "Author: " + searchedBook.getAuthor() + "\n"
                    + "ISBN: " + searchedBook.getISBN() + "\n"
                    + "Price: $" + String.format("%.2f", searchedBook.getPrice()) + "\n"
                    + "Category: " + searchedBook.getCategory() + "\n"
                    + "Avaliable: " + availability + " for Loan\n\n";
            
            searchResultArea.setText(resultText);
        }
    }//GEN-LAST:event_displayBookBtnActionPerformed

    private void displayStudentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayStudentBtnActionPerformed
        // TODO add your handling code here:
//    StringBuilder resultText = new StringBuilder();
//    resultText.append("All Students:\n");
//    resultText.append("=============\n\n");
//    
//    for (int i = 0; i < allStudents.size(); i++) {
//        Student student = allStudents.get(i);
//        resultText.append("Student ").append(i + 1).append(":\n");
//        resultText.append("Name: ").append(student.getName()).append("\n");
//        resultText.append("Student ID: ").append(student.getAdminNumber()).append("\n");
//        resultText.append("\n");
//    }
//    
        final ArrayList<Book> studentBooks = searchedStudent.getBorrowedBooks();

        String resultText
                = "Name: " + searchedStudent.getName() + "\n"
                + "Student ID: " + searchedStudent.getAdminNumber() + "\n\n"
                + "Borrowed Books" + "\n\n";

        for (int i = 0; i < studentBooks.size(); i++) {
            final Book book = studentBooks.get(i);

            resultText = resultText
                    + "Title: " + book.getBookTitle() + "\n"
                    + "Author: " + book.getAuthor() + "\n"
                    + "ISBN: " + book.getISBN() + "\n\n";
        }

        searchResultArea.setText(resultText);
    }//GEN-LAST:event_displayStudentBtnActionPerformed

    private void previousBtnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousBtnBookActionPerformed
        // TODO add your handling code here:
        if (bookIndex != 0) {
            bookIndex--;
        }
        displayCurrentBook();
    }//GEN-LAST:event_previousBtnBookActionPerformed

    private void lastBtnStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastBtnStudentActionPerformed
        // TODO add your handling code here: 
        index = allStudents.size() - 1;

        displayCurrentStudent();
    }//GEN-LAST:event_lastBtnStudentActionPerformed

    private void lastBtnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastBtnBookActionPerformed
        // TODO add your handling code here:
        bookIndex = allBooks.size() - 1;

        displayCurrentBook();    
    }//GEN-LAST:event_lastBtnBookActionPerformed

    private void nextBtnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextBtnBookActionPerformed
        // TODO add your handling code here:
        if (bookIndex < allBooks.size() - 1) {
            bookIndex++;
        }
        displayCurrentBook();
    }//GEN-LAST:event_nextBtnBookActionPerformed

    private void firstBtnStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstBtnStudentActionPerformed
        // TODO add your handling code here:
        index = 0;

        displayCurrentStudent();
    }//GEN-LAST:event_firstBtnStudentActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        String studentIDToDelete = studentIDField.getText().trim();

        studentManagement.deleteStudent(studentIDToDelete, bookManagement);
    
        studentIndex = 0;
        displayCurrentStudent();
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void deleteBookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBookBtnActionPerformed
        // TODO add your handling code here:
    //      String isbnToDelete = ISBNField.getText().trim();

    // if (isbnToDelete.isEmpty()) {
    //     errorAudio.playSound();
    //     JOptionPane.showMessageDialog(
    //             this,
    //             "Please enter the ISBN of the book to delete.",
    //             "Input Error",
    //             JOptionPane.ERROR_MESSAGE
    //     );
    //     return;
    // }
    
    
    // // Step 1: Locate the book and store index
    // Book bookToDelete = null;
    // int bookIndexToRemove = -1;
    // for (int i = 0; i < allBooks.size(); i++) {
    //     Book b = allBooks.get(i);
    //     if (b.getISBN().equalsIgnoreCase(isbnToDelete)) {
    //         bookToDelete = b;
    //         bookIndexToRemove = i;
    //         break;
    //     }
    // }

    // // Step 2: Book not found
    // if (bookToDelete == null) {
    //     errorAudio.playSound();
    //     JOptionPane.showMessageDialog(
    //             this,
    //             "Book with ISBN \"" + isbnToDelete + "\" not found.",
    //             "Error",
    //             JOptionPane.ERROR_MESSAGE
    //     );
    //     return;
    // }

    // // Step 3: Show book info and confirm
    // String bookInfo = String.format(
    //         "Are you sure you want to delete this book?\n\n"
    //         + "Title: %s\n"
    //         + "Author: %s\n"
    //         + "ISBN: %s\n"
    //         + "Price: $%.2f\n"
    //         + "Category: %s\n"
    //         + "Available: %s",
    //         bookToDelete.getBookTitle(),
    //         bookToDelete.getAuthor(),
    //         bookToDelete.getISBN(),
    //         bookToDelete.getPrice(),
    //         bookToDelete.getCategory(),
    //         bookToDelete.getAvailableForLoan() ? "Yes" : "No"
    // );

    // int confirm = JOptionPane.showConfirmDialog(
    //         this,
    //         bookInfo,
    //         "Confirm Book Deletion",
    //         JOptionPane.YES_NO_OPTION
    // );

    // if (confirm != JOptionPane.YES_OPTION) {
    //     return;
    // }

    //  // Step 4: Update all students' borrowed list
    // for (int i = 0; i < allStudents.size(); i++) {
    //     Student student = allStudents.get(i);
    //     ArrayList<Book> borrowed = student.getBorrowedBooks();

    //     for (int j = 0; j < borrowed.size(); j++) {
    //         Book borrowedBook = borrowed.get(j);
    //         if (borrowedBook.getISBN().equalsIgnoreCase(isbnToDelete)) {
    //             borrowed.remove(j);
    //             j--; // Decrement j since list size has changed
    //         }
    //     }
    // }
    // // Step 5: Remove the book from the main book list
    // allBooks.remove(bookIndexToRemove);

    // JOptionPane.showMessageDialog(
    //         this,
    //         "Book deleted successfully.",
    //         "Success",
    //         JOptionPane.INFORMATION_MESSAGE
    // );

    // // Step 6: Adjust index if needed
    // if (bookIndex >= allBooks.size()) {
    //     bookIndex = allBooks.size() - 1;
    // }

    // displayCurrentBook();

    String isbnToDelete = ISBNField.getText().trim();

    bookManagement.deleteBook(isbnToDelete, studentManagement);
    studentManagement.deleteBookFromStudent(isbnToDelete);
    
    bookIndex = 0;
    displayCurrentBook();

    }//GEN-LAST:event_deleteBookBtnActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        // TODO add your handling code here:
        try {
            studentManagement.saveAllData();
            bookManagement.saveAllData();
            JOptionPane.showMessageDialog(this, "Program Terminated.\nThank you!", "Message", JOptionPane.INFORMATION_MESSAGE);
            dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error saving data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_exitBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        String searchTerm = searchBarField.getText().trim();
        
        // Check if search term is empty
        if (searchTerm.isEmpty()) {
            errorAudio.playSound();
            JOptionPane.showMessageDialog(this, 
                "Please enter a search term.", 
                "Search Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Check if neither radio button is selected
        if (!studentRB.isSelected() && !bookRB.isSelected()) {
            errorAudio.playSound();
            JOptionPane.showMessageDialog(this, 
                "Please select either 'by student' or 'by Book' option.", 
                "Search Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            if (studentRB.isSelected()) {
                // Search for student
                searchedStudent = studentManagement.searchForStudent(searchTerm);
                
                if (searchedStudent != null) {
                    searchResultArea.setText(
                            "Name: " + searchedStudent.getName() + "\n"
                            + "Student ID: " + searchedStudent.getAdminNumber() + "\n"
                            + "Books Borrowed: " + searchedStudent.getBorrowedBooks().size()
                    );
                    displayStudentBtn.setEnabled(true);  // Enable student display button
                    displayBookBtn.setEnabled(false);    // Disable book display button
                } else {
                    searchResultArea.setText("Student not found.");
                    displayStudentBtn.setEnabled(false);
                    displayBookBtn.setEnabled(false);
                }

            } else if (bookRB.isSelected()) {
                // Search for book
                searchedBook = bookManagement.searchForBook(searchTerm);
                
                if (searchedBook != null) {
                    final String availability = searchedBook.getAvailableForLoan() ? "Available" : "Not Available";
                    searchResultArea.setText(
                            "Title: " + searchedBook.getBookTitle() + "\n"
                            + "Author: " + searchedBook.getAuthor() + "\n"
                            + "ISBN: " + searchedBook.getISBN() + "\n"
                            + availability + " for Loan"
                    );
                    displayBookBtn.setEnabled(true);     // Enable book display button
                    displayStudentBtn.setEnabled(false); // Disable student display button
                } else {
                    searchResultArea.setText("Book not found.");
                    displayStudentBtn.setEnabled(false);
                    displayBookBtn.setEnabled(false);
                }
            }
        } catch (Exception e) {
            // Handle any unexpected errors
            searchResultArea.setText("An error occurred during search.");
            displayStudentBtn.setEnabled(false);
            displayBookBtn.setEnabled(false);
            e.printStackTrace();
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(displayStudentBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(displayStudentBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(displayStudentBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(displayStudentBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new displayStudentBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ISBNField;
    private javax.swing.JLabel ISBNLabel;
    private javax.swing.JButton addBookBtn;
    private javax.swing.JTextField authorField;
    private javax.swing.JLabel authorLabel;
    private javax.swing.JTextField avaliabilityField;
    private javax.swing.JLabel avaliableLabel;
    private javax.swing.JPanel bookNumber;
    private javax.swing.JRadioButton bookRB;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField categoryField;
    private javax.swing.JLabel categoryLabel;
    private javax.swing.JButton createBtnStudent;
    private javax.swing.JButton deleteBookBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton displayBookBtn;
    private javax.swing.JButton displayStudentBtn;
    private javax.swing.JButton exitBtn;
    private javax.swing.JButton firstBtnBook;
    private javax.swing.JButton firstBtnStudent;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton lastBtnBook;
    private javax.swing.JButton lastBtnStudent;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JButton nextBtnBook;
    private javax.swing.JButton nextBtnStudent;
    private javax.swing.JButton previousBtnBook;
    private javax.swing.JButton previousBtnStudent;
    private javax.swing.JTextField priceField;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JTextField searchBarField;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextArea searchResultArea;
    private javax.swing.JLabel searchResultLabel;
    private javax.swing.JTextField studentIDField;
    private javax.swing.JLabel studentIDLabel;
    private javax.swing.JPanel studentNumber;
    private javax.swing.JRadioButton studentRB;
    private javax.swing.JTextField titleField;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
